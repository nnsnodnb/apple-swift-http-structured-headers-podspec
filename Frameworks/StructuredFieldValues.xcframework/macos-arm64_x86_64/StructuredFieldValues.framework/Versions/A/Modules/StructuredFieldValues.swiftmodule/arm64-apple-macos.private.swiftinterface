// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.7.1 (swiftlang-5.7.1.135.3 clang-1400.0.29.51)
// swift-module-flags: -target arm64-apple-macos10.13 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name StructuredFieldValues
// swift-module-flags-ignorable: -enable-bare-slash-regex
import Foundation
import RawStructuredFieldValues
import Swift
import _Concurrency
import _StringProcessing
public struct StructuredFieldValueDecoder : RawStructuredFieldValues.SHSendable {
  public var keyDecodingStrategy: StructuredFieldValues.StructuredFieldValueDecoder.KeyDecodingStrategy?
  public init()
}
extension StructuredFieldValues.StructuredFieldValueDecoder {
  public struct KeyDecodingStrategy : Swift.Hashable, RawStructuredFieldValues.SHSendable {
    public static let lowercase: StructuredFieldValues.StructuredFieldValueDecoder.KeyDecodingStrategy
    public func hash(into hasher: inout Swift.Hasher)
    public static func == (a: StructuredFieldValues.StructuredFieldValueDecoder.KeyDecodingStrategy, b: StructuredFieldValues.StructuredFieldValueDecoder.KeyDecodingStrategy) -> Swift.Bool
    public var hashValue: Swift.Int {
      get
    }
  }
}
extension StructuredFieldValues.StructuredFieldValueDecoder {
  public func decode<StructuredField, BaseData>(_ type: StructuredField.Type = StructuredField.self, from data: BaseData) throws -> StructuredField where StructuredField : StructuredFieldValues.StructuredFieldValue, BaseData : Swift.RandomAccessCollection, BaseData.Element == Swift.UInt8
}
public struct StructuredFieldValueEncoder : RawStructuredFieldValues.SHSendable {
  public var keyEncodingStrategy: StructuredFieldValues.StructuredFieldValueEncoder.KeyEncodingStrategy?
  public init()
}
extension StructuredFieldValues.StructuredFieldValueEncoder {
  public struct KeyEncodingStrategy : Swift.Hashable, RawStructuredFieldValues.SHSendable {
    public static let lowercase: StructuredFieldValues.StructuredFieldValueEncoder.KeyEncodingStrategy
    public func hash(into hasher: inout Swift.Hasher)
    public static func == (a: StructuredFieldValues.StructuredFieldValueEncoder.KeyEncodingStrategy, b: StructuredFieldValues.StructuredFieldValueEncoder.KeyEncodingStrategy) -> Swift.Bool
    public var hashValue: Swift.Int {
      get
    }
  }
}
extension StructuredFieldValues.StructuredFieldValueEncoder {
  public func encode<StructuredField>(_ data: StructuredField) throws -> [Swift.UInt8] where StructuredField : StructuredFieldValues.StructuredFieldValue
}
public protocol StructuredFieldValue : Swift.Decodable, Swift.Encodable {
  static var structuredFieldType: StructuredFieldValues.StructuredFieldType { get }
}
public enum StructuredFieldType {
  case item
  case list
  case dictionary
  public static func == (a: StructuredFieldValues.StructuredFieldType, b: StructuredFieldValues.StructuredFieldType) -> Swift.Bool
  public func hash(into hasher: inout Swift.Hasher)
  public var hashValue: Swift.Int {
    get
  }
}
extension StructuredFieldValues.StructuredFieldType : Swift.Equatable {}
extension StructuredFieldValues.StructuredFieldType : Swift.Hashable {}
